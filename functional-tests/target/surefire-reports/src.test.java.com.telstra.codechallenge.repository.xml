<testsuite failures="0" name="src/test/java/com/telstra/codechallenge/repository.feature" skipped="0" tests="3" time="1.498504">
  <testcase classname="src.test.java.com.telstra.codechallenge.repository" name="Get a Repository" time="0.978606">
    <system-out>Given url microserviceUrl ................................................. passed
And path "/repositories/hottest" .......................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match header Content-Type contains 'application/json' ................. passed
* def repositorySchema = { url : '#string', watchers_count : '#string',  language : '##string', description : '#string', name : '#string' } . passed
And match response.items == '#[] repositorySchema' ........................ passed</system-out>
  </testcase>
  <testcase classname="src.test.java.com.telstra.codechallenge.repository" name="Get a 5 hottest Repository" time="0.503712">
    <system-out>Given url microserviceUrl ................................................. passed
And path "/repositories/hottest" .......................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match header Content-Type contains 'application/json' ................. passed
* def repositorySchema = { url : '#string', watchers_count : '#string',  language : '##string', description : '#string', name : '#string' } . passed
And match response.items == '#[] repositorySchema' ........................ passed
Given url microserviceUrl ................................................. passed
And path "/repositories/hottest" .......................................... passed
And param count = 5 ....................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match header Content-Type contains 'application/json' ................. passed
* def repositorySchema = { url : '#string', watchers_count : '#string',  language : '##string', description : '#string', name : '#string' } . passed
And match response.items == '#[] repositorySchema' ........................ passed</system-out>
  </testcase>
  <testcase classname="src.test.java.com.telstra.codechallenge.repository" name="Get a 0 hottest Repository" time="0.016186">
    <system-out>Given url microserviceUrl ................................................. passed
And path "/repositories/hottest" .......................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match header Content-Type contains 'application/json' ................. passed
* def repositorySchema = { url : '#string', watchers_count : '#string',  language : '##string', description : '#string', name : '#string' } . passed
And match response.items == '#[] repositorySchema' ........................ passed
Given url microserviceUrl ................................................. passed
And path "/repositories/hottest" .......................................... passed
And param count = 5 ....................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match header Content-Type contains 'application/json' ................. passed
* def repositorySchema = { url : '#string', watchers_count : '#string',  language : '##string', description : '#string', name : '#string' } . passed
And match response.items == '#[] repositorySchema' ........................ passed
Given url microserviceUrl ................................................. passed
And path "/repositories/hottest" .......................................... passed
And param count = 0 ....................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match header Content-Type contains 'application/json' ................. passed
And match response.errorMessage == 'Count value is less than 1' ........... passed</system-out>
  </testcase>
</testsuite>
